# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scan_qr_code.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys, cv2
from PyQt5 import QtCore, QtGui, QtWidgets
#from select_body_part import *

class qr_scanner_window(object):

    ## OPEN QR SCANNER FOR RASPI
    def open_qr_scanner(self):
        # set up camera object called Cap which we will use to find OpenCV
        cap = cv2.VideoCapture(0)

        # QR code detection Method
        detector = cv2.QRCodeDetector()

        #This creates an Infinite loop to keep your camera searching for data at all times
        while True:
            
            # Below is the method to get a image of the QR code
            _, img = cap.read()
            
            # Below is the method to read the QR code by detetecting the bounding box coords and decoding the hidden QR data 
            data, bbox, _ = detector.detectAndDecode(img)
            
            # This is how we get that Blue Box around our Data. This will draw one, and then Write the Data along with the top
            if(bbox is not None):
                for i in range(len(bbox)):
                    cv2.line(img, tuple(bbox[i][0]), tuple(bbox[(i+1) % len(bbox)][0]), color=(255,
                            0, 0), thickness=2)
                cv2.putText(img, data, (int(bbox[0][0][0]), int(bbox[0][0][1]) - 10), cv2.FONT_HERSHEY_SIMPLEX,
                            1, (255, 250, 120), 2)
                
                
                #Below prints the found data to the below terminal (This we can easily expand on to capture the data to an Excel Sheet)
                if data:
                    print("data found: ", data)
                    
                    
                    #You can also add content to before the pass. Say the system reads red it'll activate a Red LED and the same for Green.
                    if data == 'red':
                        pass
                    if data == 'green':
                        pass
                
                    
            # Below will display the live camera feed to the Desktop on Raspberry Pi OS preview
            cv2.imshow("Please focus the QR Code in your ID to the Camera to continue", img)
            
            #At any point if you want to stop the Code all you need to do is press 'q' on your keyboard
            if(cv2.waitKey(1) == ord("b")):
                break
            
        # When the code is stopped the below closes all the applications/windows that the above has created
        cap.release()
        cv2.destroyAllWindows()
        
        self.open_select_body_part()
        
    def open_select_body_part(self):
        select_body_part()
        
    def setupUi(self, qr_window_app):
        self.window_qr_scanner = qr_window_app
        qr_window_app.setObjectName("qr_window_app")
        #qr_window_app.resize(1024, 600)
        #qr_window_app.setMinimumSize(QtCore.QSize(0, 0))
        #qr_window_app.setMaximumSize(QtCore.QSize(1024, 600))
        self.centralwidget = QtWidgets.QWidget(qr_window_app)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(9, 9, 1011, 171))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.TITLE = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Unispace")
        font.setPointSize(36)
        font.setBold(True)
        font.setWeight(75)
        self.TITLE.setFont(font)
        self.TITLE.setAlignment(QtCore.Qt.AlignCenter)
        self.TITLE.setObjectName("TITLE")
        self.gridLayout_2.addWidget(self.TITLE, 0, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(9, 298, 1031, 301))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout.setObjectName("gridLayout")
        self.TUPC = QtWidgets.QLabel(self.frame_2)
        self.TUPC.setMinimumSize(QtCore.QSize(192, 192))
        self.TUPC.setMaximumSize(QtCore.QSize(192, 192))
        self.TUPC.setText("")
        self.TUPC.setPixmap(QtGui.QPixmap("../tuplogo (1).png"))
        self.TUPC.setObjectName("TUPC")
        self.gridLayout.addWidget(self.TUPC, 0, 0, 1, 1)
        self.TUPC_2 = QtWidgets.QLabel(self.frame_2)
        self.TUPC_2.setMinimumSize(QtCore.QSize(194, 194))
        self.TUPC_2.setMaximumSize(QtCore.QSize(194, 194))
        self.TUPC_2.setText("")
        self.TUPC_2.setPixmap(QtGui.QPixmap("../first-aid-logo-png-png-image-762531.png"))
        self.TUPC_2.setObjectName("TUPC_2")
        self.gridLayout.addWidget(self.TUPC_2, 0, 1, 1, 1)
        self.rasberry = QtWidgets.QLabel(self.frame_2)
        self.rasberry.setMinimumSize(QtCore.QSize(156, 200))
        self.rasberry.setMaximumSize(QtCore.QSize(156, 200))
        self.rasberry.setText("")
        self.rasberry.setPixmap(QtGui.QPixmap("../asd.png"))
        self.rasberry.setObjectName("rasberry")
        self.gridLayout.addWidget(self.rasberry, 0, 2, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked = self.open_qr_scanner)
        self.pushButton.setGeometry(QtCore.QRect(351, 187, 321, 101))
        font = QtGui.QFont()
        font.setFamily("Unispace")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        qr_window_app.setCentralWidget(self.centralwidget)
        
        _translate = QtCore.QCoreApplication.translate
        qr_window_app.setWindowTitle(_translate("qr_window_app", "Interactive First Aid Cabinet - Scan the QR Code in your ID to continue"))
        self.TITLE.setText(_translate("qr_window_app", "Scan QR Code to Continue"))
        self.pushButton.setText(_translate("qr_window_app", "SCAN"))

        #self.retranslateUi(qr_window_app)
        QtCore.QMetaObject.connectSlotsByName(qr_window_app)

class select_body_part(object):
    def setupUi(self, body_parts_window):
        body_parts_window.setObjectName("body_parts_window")
        #body_parts_window.resize(1024, 600)
        #body_parts_window.setMinimumSize(QtCore.QSize(1024, 600))
        #body_parts_window.setMaximumSize(QtCore.QSize(1024, 600))
        self.centralwidget = QtWidgets.QWidget(body_parts_window)
        self.centralwidget.setObjectName("centralwidget")
        self.TITLE = QtWidgets.QLabel(self.centralwidget)
        self.TITLE.setGeometry(QtCore.QRect(0, 0, 1021, 91))
        font = QtGui.QFont()
        font.setFamily("Unispace")
        font.setPointSize(24)
        self.TITLE.setFont(font)
        self.TITLE.setAlignment(QtCore.Qt.AlignCenter)
        self.TITLE.setObjectName("TITLE")
        self.body_part = QtWidgets.QLabel(self.centralwidget)
        self.body_part.setGeometry(QtCore.QRect(10, 60, 1001, 521))
        self.body_part.setText("")
        self.body_part.setTextFormat(QtCore.Qt.PlainText)
        self.body_part.setPixmap(QtGui.QPixmap("body_part.png"))
        self.body_part.setObjectName("body_part")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(761, 308, 141, 71))
        font = QtGui.QFont()
        font.setFamily("Unispace")
        font.setPointSize(36)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        body_parts_window.setCentralWidget(self.centralwidget)
        
        _translate = QtCore.QCoreApplication.translate
        body_parts_window.setWindowTitle(_translate("body_parts_window", "BODY PARTS SELECTION"))
        self.TITLE.setText(_translate("body_parts_window", "Select body Part"))
        self.pushButton.setText(_translate("body_parts_window", "HAND"))

        #self.retranslateUi(body_parts_window)
        QtCore.QMetaObject.connectSlotsByName(body_parts_window)


if __name__ == "__main__":
    
    app = QtWidgets.QApplication(sys.argv)
    one_window = QtWidgets.QStackedWidget()
    #window_select_body_part = select_body_part()
    window_qr_scanner_window = qr_scanner_window()
    one_window.addWidget(window_qr_scanner_window.setupUi.(qr_window_app))
    one_window.setFixedHeight(600)
    one_window.setFixedWidth(1024)
    one_window.show()
    #ui.setupUi(body_parts_window)
    #body_parts_window.show()
    sys.exit(app.exec_())